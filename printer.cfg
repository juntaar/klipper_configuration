[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include macros.cfg]

# Creality Ender 5 S1 (HW version: CR4NS200141C13). Printer Size: 220x220x280
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

# Peripheral MCU board (STM32F411), select "no bootloader" and USB
[mcu peripheral]
serial: /dev/serial/by-id/usb-Klipper_stm32f401xc_48003D000751333236373033-if00
restart_method: command

[virtual_sdcard]
path: /home/klipper/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[stepper_x]
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: !PA5
position_endstop: 220
position_max: 222
homing_speed: 80

[stepper_y]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: !PA6
position_endstop: 220
position_max: 220
homing_speed: 80

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 280
homing_speed: 20
second_homing_speed: 1
homing_retract_dist: 2.0
position_min: -2.0

[extruder]
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
rotation_distance: 7.5
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
### #control: pid  # tuned for stock hardware with 210 degree Celsius target
### #pid_kp: 20.749
### #pid_ki: 1.064
### #pid_kd: 101.153
min_temp: 0
max_temp: 305

[heater_bed]
heater_pin: PA7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
### #control: pid  # tuned for stock hardware with 60 degree Celsius target
### #pid_kp: 66.566
### #pid_ki: 0.958
### #pid_kd: 1155.761
min_temp: 0
max_temp: 110

# Part cooling fan
[fan]
pin: PA0
kick_start_time: 0.5

# Hotend fan
# set fan runnig when extruder temperature is over 60
[heater_fan heatbreak_fan]
pin: PC0
heater:extruder
heater_temp: 60
fan_speed: 0.8

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: ^!PC15

# Stock CR Touch bed sensor
[bltouch]
sensor_pin: ^PC14
control_pin: PC13
x_offset: -13
y_offset: 27
# AB: overwritten by bltouch z-offset calibration below
#z_offset: 2.0
speed: 10
stow_on_each_sample: true    # Occasional bed crashes when false
samples: 4
sample_retract_dist: 2
samples_result: average
probe_with_touch_mode: true

[bed_mesh]
speed: 150
# AB: corrected values to have bed mesh levelling actually hit the bed
#mesh_min: 3,28         # need to handle head distance with bl_touch
mesh_min: 0,28
# AB: corrected values to have bed mesh levelling actually hit the bed
#mesh_max: 205,218
mesh_max: 205,195
mesh_pps: 3
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0

[safe_z_home]
home_xy_position: 123,83
#AB: sped up as the printer can go faster
#speed: 200
speed: 250
z_hop: 10
z_hop_speed: 10

# Many Ender 5 S1 printers appear to suffer from a slight twist in the X axis.  This twist can be measured, and compensated for
# using the AXIS_TWIST_COMPENSATION_CALIBRATE G-Code command. See https://www.klipper3d.org/Axis_Twist_Compensation.html for more
# information. This section provides the setup for this optional calibration step.
[axis_twist_compensation]
calibrate_start_x: 3
calibrate_end_x: 207
calibrate_y: 110

# Probe locations for assisted bed screw adjustment.
[screws_tilt_adjust]
screw1: 38,6
screw1_name: Front Left Screw
screw2: 215,6
screw2_name: Front Right Screw
screw3: 215,175
screw3_name: Rear Right Screw
screw4: 38,175
screw4_name: Rear Left Screw
horizontal_move_z: 5
#AB: changed to go faster
#speed: 100
speed: 250
screw_thread: CW-M4

[bed_screws]
screw1: 25,25
screw1_name: Front Left Screw
screw2: 195,25
screw2_name: Front Right Screw
screw3: 195,195
screw3_name: Rear Right Screw
screw4: 25,195
screw4_name: Rear Left Screw

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0

# defined for KAMP to allow object exclusion
[exclude_object]

######################################################################
# Sensors
######################################################################
# host temperature sensor
[temperature_sensor Host_CPU]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp

# main MCU temperature sensor
[temperature_sensor MCU_main]
sensor_type: temperature_mcu
sensor_mcu: mcu
sensor_temperature1: 10
sensor_adc1: 0.238248

# peripheral MCU temperature sensor
[temperature_sensor MCU_peripheral]
sensor_type: temperature_mcu
sensor_mcu: peripheral

# ambient temperature sensor
#[temperature_sensor Ambient]
#sensor_type: SHT21
#i2c_address: 64
#   Default is 64 (0x40).
#i2c_mcu: peripheral
#i2c_bus: i2c2
#i2c_speed: 400000
#htu21d_hold_master: True
#   If the sensor can hold the I2C buf while reading. If True no other bus communication can be performed while reading is in progress. Default is False.
#htu21d_resolution: TEMP11_HUM11
#   The resolution of temperature and humidity reading. Default is: "TEMP11_HUM11". Valid values are:
#    'TEMP14_HUM12' -> 14bit for Temp and 12bit for humidity
#    'TEMP13_HUM10' -> 13bit for Temp and 10bit for humidity
#    'TEMP12_HUM08' -> 12bit for Temp and 08bit for humidity
#    'TEMP11_HUM11' -> 11bit for Temp and 11bit for humidity
#htu21d_report_time: 30
#   Interval in seconds between readings. Default is 30

# accelerometer support
#[adxl345]
#cs_pin: peripheral:PA4
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus: spi1
#spi_software_sclk_pin: peripheral:
#spi_software_mosi_pin: peripheral:
#spi_software_miso_pin: peripheral:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#axes_map: x, y, z
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

# invesense accelerometer (I2C mode)
[mpu9250]
i2c_address: 104
#   Default is 104 (0x68). If AD0 is high, it would be 0x69 instead.
i2c_mcu: peripheral
i2c_bus: i2c1
i2c_speed: 400000
axes_map: z, x, y
# for front fan mounting position, printer Y+ is the accel. Z+ direction, X+ is the Y+, and Z+ is the X+

# resonance tester setup
[resonance_tester]
accel_chip: mpu9250
probe_points: 100,100,50
min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of high-frequency resonances less precise. The default value is 75 (mm/sec).
hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).


######################################################################
# Lights / WS2812 compatible RGB pixels
######################################################################
# printer light, right chain
[neopixel right_chain]
pin: peripheral:PA0
chain_count: 16
# 2 x 8 pixel LEDs
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0

# printer light, left chain
[neopixel left_chain]
pin: peripheral:PA1
chain_count: 16
# 2 x 8 pixel
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0

# camera light
[neopixel cam_chain]
pin: peripheral:PA2
chain_count: 2
# 2 x 1 pixel
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
   

######################################################################
# Saved Config
######################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.201250, 0.154375, 0.132500, 0.160000, 0.210000
#*# 	  0.138125, 0.100625, 0.068125, 0.101250, 0.117500
#*# 	  0.063125, 0.007500, -0.003125, 0.031875, 0.073750
#*# 	  0.114375, 0.030000, 0.015000, 0.028750, 0.095000
#*# 	  0.306875, 0.046250, 0.050000, 0.076875, 0.169375
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 0.0
#*# max_x = 205.0
#*# min_y = 28.0
#*# max_y = 195.0
#*#
#*# [bltouch]
#*# z_offset = 1.350
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.004
#*# pid_ki = 0.839
#*# pid_kd = 107.609
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.450
#*# pid_ki = 0.647
#*# pid_kd = 1654.261
